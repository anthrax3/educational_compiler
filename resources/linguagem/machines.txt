@names_of_machines_that_are_tokens = [id, inteiro, string, booleano]

// the first machine to be declared must be the initial machine
*programa
initial: 0
final: 8
(0, "int") -> 1
(0, "char") -> 1
(0, "boolean") -> 1
(0, "void") -> 1
(0, "main") -> 2
(1, id) -> 3
(2, "{") -> 4
(3, "(") -> 5
(4, "int") -> 6
(4, "char") -> 6
(4, "boolean") -> 6
(4, ";") -> 7
(4, comando) -> 7
(4, "}") -> 8
(5, "int") -> 9
(5, "char") -> 9
(5, "boolean") -> 9
(5, ")") -> 10
(6, id) -> 15
(7, comando) -> 7
(7, "}") -> 8
(9, id) -> 21
(10, "{") -> 11
(11, "int") -> 12
(11, "char") -> 12
(11, "boolean") -> 12
(11, ";") -> 13
(11, comando) -> 13
(11, "return") -> 14
(11, "}") -> 0
(12, id) -> 19
(13, comando) -> 13
(13, "return") -> 14
(13, "}") -> 0
(14, expressao) -> 16
(15, ",") -> 17
(15, ";") -> 7
(16, ";") -> 18
(17, "int") -> 6
(17, "char") -> 6
(17, "boolean") -> 6
(18, "}") -> 0
(19, ",") -> 20
(19, ";") -> 13
(20, "int") -> 12
(20, "char") -> 12
(20, "boolean") -> 12
(21, ",") -> 22
(21, ")") -> 10
(22, "int") -> 9
(22, "char") -> 9
(22, "boolean") -> 9

*comando
initial: 0
final: 15, 26
(0, id) -> 1
(0, "call") -> 2
(0, "if") -> 3
(0, "while") -> 4
(0, "scan") -> 5
(0, "print") -> 6
(1, "=") -> 7
(2, id) -> 16
(3, "(") -> 22
(4, "(") -> 27
(5, "(") -> 17
(6, "(") -> 8
(7, expressao) -> 9
(7, "call") -> 10
(8, condicao) -> 11
(8, string) -> 11
(9, ";") -> 15
(10, id) -> 12
(11, ")") -> 9
(11, "+") -> 8
(12, "(") -> 13
(13, expressao) -> 14
(13, ")") -> 9
(14, ")") -> 9
(16, "(") -> 18
(17, "int") -> 19
(17, "char") -> 19
(17, "boolean") -> 19
(18, expressao) -> 20
(19, ",") -> 21
(20, ")") -> 15
(21, id) -> 14
(22, condicao) -> 23
(23, ")") -> 24
(24, "{") -> 25
(25, comando) -> 25
(25, "}") -> 26
(26, "else") -> 28
(27, condicao) -> 29
(28, "{") -> 30
(29, ")") -> 28
(30, comando) -> 30
(30, "}") -> 15

*expressao
initial: 0
final: 2
(0, "(") -> 1
(0, id) -> 2
(0, inteiro) -> 2
(1, expressao) -> 3
(2, "*") -> 0
(2, "/") -> 0
(2, "+") -> 0
(2, "-") -> 0
(3, ")") -> 2

*condicao
initial: 0
final: 1, 2
(0, expressao) -> 1
(0, booleano) -> 2
(1, "<") -> 3
(1, "<=") -> 3
(1, ">") -> 3
(1, ">=") -> 3
(1, "==") -> 3
(1, "!=") -> 3
(3, expressao) -> 2